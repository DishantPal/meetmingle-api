/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Decimal = ColumnType<string, number | string>;

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface AppSettings {
  created_at: Generated<Date>;
  group: string;
  id: Generated<number>;
  key: string;
  updated_at: Date;
  value: string;
}

export interface CoinPackages {
  coins: number;
  created_at: Generated<Date>;
  currency: string;
  icon: string;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  playstore_id: string;
  price: Decimal;
  updated_at: Generated<Date>;
}

export interface ContentBlocks {
  content: Json;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_active: Generated<number>;
  purpose: string;
  title: string;
  type: string;
  updated_at: Generated<Date>;
}

export interface Countries {
  code: string;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  region: string;
  updated_at: Generated<Date>;
}

export interface Languages {
  code: string;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  native_name: string;
  updated_at: Generated<Date>;
}

export interface MatchHistory {
  call_type: string;
  created_at: Generated<Date>;
  duration_seconds: number | null;
  end_reason: string | null;
  end_time: Date | null;
  id: Generated<number>;
  start_time: Date;
  updated_at: Generated<Date>;
  user1_id: number;
  user2_id: number;
}

export interface MatchingQueue {
  age: number | null;
  call_type: string;
  country: string | null;
  created_at: Generated<Date>;
  entry_time: Generated<Date>;
  filter_age_max: number | null;
  filter_age_min: number | null;
  filter_country: string | null;
  filter_gender: string | null;
  filter_language: string | null;
  filter_state: string | null;
  gender: string | null;
  id: Generated<number>;
  interests: Json | null;
  preferred_language: string | null;
  state: string | null;
  status: Generated<string>;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Pages {
  content: string;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_active: Generated<number>;
  slug: string;
  title: string;
  updated_at: Generated<Date>;
}

export interface ReportReasons {
  code: string;
  created_at: Generated<Date>;
  desc: string;
  id: Generated<number>;
  is_active: Generated<number>;
  title: string;
  updated_at: Generated<Date>;
}

export interface Rewards {
  button_label: Generated<string | null>;
  code: string;
  coins: number;
  created_at: Generated<Date>;
  description: string;
  icon: string;
  id: Generated<number>;
  is_active: Generated<number | null>;
  link: string | null;
  reward_type: Generated<"daily" | "multiple" | "one_time">;
  title: string;
  updated_at: Generated<Date>;
}

export interface States {
  code: string;
  country_code: string;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  updated_at: Generated<Date>;
}

export interface SubscriptionCharges {
  amount: Decimal;
  charge_date: Date;
  created_at: Generated<Date>;
  currency: string;
  id: Generated<number>;
  payment_provider: string;
  payment_provider_transaction_id: string;
  status: Generated<"failed" | "pending" | "success">;
  updated_at: Generated<Date>;
  user_subscription_id: number;
}

export interface SubscriptionPlanFeatures {
  code: string;
  created_at: Generated<Date>;
  description: string | null;
  feature_value: string | null;
  icon: string | null;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  plan_id: number;
  updated_at: Generated<Date>;
}

export interface SubscriptionPlans {
  code: string;
  created_at: Generated<Date>;
  description: string | null;
  duration_days: number;
  icon: string | null;
  id: Generated<number>;
  is_active: Generated<number>;
  name: string;
  price: Decimal;
  store_product_id_android: string | null;
  store_product_id_ios: string | null;
  updated_at: Generated<Date>;
}

export interface UserBlocks {
  blocked_id: number;
  blocker_id: number;
  created_at: Generated<Date>;
  id: Generated<number>;
  updated_at: Generated<Date>;
}

export interface UserCoinTransactions {
  action_type: string;
  admin_note: string | null;
  amount: number;
  checksum: string;
  created_at: Generated<Date>;
  description: string;
  id: Generated<number>;
  reference_id: string | null;
  running_balance: number;
  transaction_id: string;
  transaction_type: "credit" | "debit";
  updated_at: Generated<Date>;
  user_id: number;
  user_note: string | null;
}

export interface UserProfiles {
  bio: string | null;
  country: string | null;
  created_at: Generated<Date>;
  dob: Date | null;
  gender: string | null;
  hashtags: Json | null;
  id: Generated<number>;
  interests: Json | null;
  is_drinking: Generated<number | null>;
  is_fitness_enthusiast: Generated<number | null>;
  is_smoking: Generated<number | null>;
  looking_for: Json | null;
  personality_traits: Json | null;
  pet_info: string | null;
  preferred_language: string | null;
  profile_completion_percentage: Generated<number | null>;
  profile_image_url: string | null;
  profile_name: string | null;
  relationship_status: string | null;
  state: string | null;
  timezone: Generated<string>;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface UserReports {
  created_at: Generated<Date>;
  id: Generated<number>;
  reason_code: string;
  reported_id: number;
  reporter_id: number;
  updated_at: Generated<Date>;
}

export interface UserRewards {
  created_at: Generated<Date>;
  expires_at: Date | null;
  id: Generated<number>;
  progress: number | null;
  reward_code: string;
  status: "awarded" | "declined" | "expired" | "pending";
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Users {
  ban_reason: string | null;
  created_at: Generated<Date>;
  deleted_at: Date | null;
  email: string | null;
  email_verified_at: Date | null;
  id: Generated<number>;
  is_banned: Generated<number>;
  password_hash: string | null;
  provider_id: string | null;
  provider_type: string | null;
  updated_at: Generated<Date>;
}

export interface UserSubscriptions {
  auto_renewal: Generated<number>;
  cancellation_date: Date | null;
  created_at: Generated<Date>;
  end_date: Date | null;
  id: Generated<number>;
  payment_provider: string;
  payment_provider_subscription_id: string;
  plan_id: number;
  start_date: Date | null;
  status: Generated<"active" | "cancelled" | "expired" | "paused">;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface DB {
  app_settings: AppSettings;
  coin_packages: CoinPackages;
  content_blocks: ContentBlocks;
  countries: Countries;
  languages: Languages;
  match_history: MatchHistory;
  matching_queue: MatchingQueue;
  pages: Pages;
  report_reasons: ReportReasons;
  rewards: Rewards;
  states: States;
  subscription_charges: SubscriptionCharges;
  subscription_plan_features: SubscriptionPlanFeatures;
  subscription_plans: SubscriptionPlans;
  user_blocks: UserBlocks;
  user_coin_transactions: UserCoinTransactions;
  user_profiles: UserProfiles;
  user_reports: UserReports;
  user_rewards: UserRewards;
  user_subscriptions: UserSubscriptions;
  users: Users;
}
